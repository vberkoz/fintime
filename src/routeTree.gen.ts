/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ReportsImport } from './routes/reports'
import { Route as IncomeImport } from './routes/income'
import { Route as GoalsImport } from './routes/goals'
import { Route as ExpensesImport } from './routes/expenses'
import { Route as BudgetsImport } from './routes/budgets'
import { Route as ActivitiesImport } from './routes/activities'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const ReportsRoute = ReportsImport.update({
  id: '/reports',
  path: '/reports',
  getParentRoute: () => rootRoute,
} as any)

const IncomeRoute = IncomeImport.update({
  id: '/income',
  path: '/income',
  getParentRoute: () => rootRoute,
} as any)

const GoalsRoute = GoalsImport.update({
  id: '/goals',
  path: '/goals',
  getParentRoute: () => rootRoute,
} as any)

const ExpensesRoute = ExpensesImport.update({
  id: '/expenses',
  path: '/expenses',
  getParentRoute: () => rootRoute,
} as any)

const BudgetsRoute = BudgetsImport.update({
  id: '/budgets',
  path: '/budgets',
  getParentRoute: () => rootRoute,
} as any)

const ActivitiesRoute = ActivitiesImport.update({
  id: '/activities',
  path: '/activities',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/activities': {
      id: '/activities'
      path: '/activities'
      fullPath: '/activities'
      preLoaderRoute: typeof ActivitiesImport
      parentRoute: typeof rootRoute
    }
    '/budgets': {
      id: '/budgets'
      path: '/budgets'
      fullPath: '/budgets'
      preLoaderRoute: typeof BudgetsImport
      parentRoute: typeof rootRoute
    }
    '/expenses': {
      id: '/expenses'
      path: '/expenses'
      fullPath: '/expenses'
      preLoaderRoute: typeof ExpensesImport
      parentRoute: typeof rootRoute
    }
    '/goals': {
      id: '/goals'
      path: '/goals'
      fullPath: '/goals'
      preLoaderRoute: typeof GoalsImport
      parentRoute: typeof rootRoute
    }
    '/income': {
      id: '/income'
      path: '/income'
      fullPath: '/income'
      preLoaderRoute: typeof IncomeImport
      parentRoute: typeof rootRoute
    }
    '/reports': {
      id: '/reports'
      path: '/reports'
      fullPath: '/reports'
      preLoaderRoute: typeof ReportsImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/activities': typeof ActivitiesRoute
  '/budgets': typeof BudgetsRoute
  '/expenses': typeof ExpensesRoute
  '/goals': typeof GoalsRoute
  '/income': typeof IncomeRoute
  '/reports': typeof ReportsRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/activities': typeof ActivitiesRoute
  '/budgets': typeof BudgetsRoute
  '/expenses': typeof ExpensesRoute
  '/goals': typeof GoalsRoute
  '/income': typeof IncomeRoute
  '/reports': typeof ReportsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/activities': typeof ActivitiesRoute
  '/budgets': typeof BudgetsRoute
  '/expenses': typeof ExpensesRoute
  '/goals': typeof GoalsRoute
  '/income': typeof IncomeRoute
  '/reports': typeof ReportsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/activities'
    | '/budgets'
    | '/expenses'
    | '/goals'
    | '/income'
    | '/reports'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/activities'
    | '/budgets'
    | '/expenses'
    | '/goals'
    | '/income'
    | '/reports'
  id:
    | '__root__'
    | '/'
    | '/activities'
    | '/budgets'
    | '/expenses'
    | '/goals'
    | '/income'
    | '/reports'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ActivitiesRoute: typeof ActivitiesRoute
  BudgetsRoute: typeof BudgetsRoute
  ExpensesRoute: typeof ExpensesRoute
  GoalsRoute: typeof GoalsRoute
  IncomeRoute: typeof IncomeRoute
  ReportsRoute: typeof ReportsRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ActivitiesRoute: ActivitiesRoute,
  BudgetsRoute: BudgetsRoute,
  ExpensesRoute: ExpensesRoute,
  GoalsRoute: GoalsRoute,
  IncomeRoute: IncomeRoute,
  ReportsRoute: ReportsRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/activities",
        "/budgets",
        "/expenses",
        "/goals",
        "/income",
        "/reports"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/activities": {
      "filePath": "activities.tsx"
    },
    "/budgets": {
      "filePath": "budgets.tsx"
    },
    "/expenses": {
      "filePath": "expenses.tsx"
    },
    "/goals": {
      "filePath": "goals.tsx"
    },
    "/income": {
      "filePath": "income.tsx"
    },
    "/reports": {
      "filePath": "reports.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
